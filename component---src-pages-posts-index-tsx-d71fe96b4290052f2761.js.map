{"version":3,"file":"component---src-pages-posts-index-tsx-d71fe96b4290052f2761.js","mappings":"uKAkDA,MA5BmB,KACjB,MACMA,EApBmB,MACzB,MACEC,aAAeC,MAAOC,KACpBC,EAAAA,EAAAA,IAAe,cAYnB,OAAOD,CAAQ,EAIEE,GACcC,QAC7BC,IAAA,IAAC,KAAEC,GAAM,SAAMA,EAAKC,SAAS,QAAUD,EAAKE,MAAM,KAAKC,QAAU,CAAC,IAG9DC,EAAUJ,GACL,MAATA,EACI,OACAA,EACGE,MAAM,IACNJ,QAAQO,GAAY,MAANA,IACdC,KAAKD,GAAa,MAANA,EAAY,IAAMA,IAC9BE,KAAK,IAERC,EAAgC,oBAAXC,OAAyBA,OAAOC,SAASC,SAAST,MAAM,KAAK,GAAK,GAE7F,OACEU,EAAAA,cAAAA,MAAAA,CAAKC,UCtCc,uCDuChBrB,EAAcc,KAAIQ,IAAA,IAAC,KAAEd,EAAI,GAAEe,GAAI,SAC9BH,EAAAA,cAACI,EAAAA,GAAI,CAACC,IAAKF,EAAIG,GAAIlB,EAAMa,UAAWL,IAAgBJ,EAAOJ,GAAQ,GCzClD,yCD0CdI,EAAOJ,GACH,IAEL,EE7BV,MAZeD,IAAkD,IAAjD,SAAEoB,GAAyC,EACzD,OACEP,EAAAA,cAAAA,MAAAA,CAAKC,UCNc,mCDOjBD,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAI,eACJA,EAAAA,cAACQ,EAAU,OAEbR,EAAAA,cAAAA,UAAAA,KAAUO,GACN,C,qEEmBV,MAnBiBpB,IAAoC,IAAD,UAAlC,KAAEsB,GAA2B,EAC7C,OACET,EAAAA,cAAAA,MAAAA,CAAKC,UCdc,qCDejBD,EAAAA,cAAAA,KAAAA,KAAqB,QAArBA,EAAKS,EAAKC,mBAAW,aAAhBC,EAAkBC,OACvBZ,EAAAA,cAAAA,IAAAA,KACEA,EAAAA,cAAAA,OAAAA,KAAM,SACW,QADC,EACjBS,EAAKC,mBAAW,aAAhBG,EAAkBC,OAErBd,EAAAA,cAAAA,IAAAA,KACEA,EAAAA,cAAAA,OAAAA,KAAM,SACW,QADC,EACjBS,EAAKC,mBAAW,aAAhBK,EAAkBC,UAErBhB,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAAAA,IAAAA,KAAIS,EAAKQ,UAEP,C,qEErBV,MAJqB9B,IAAkD,IAAjD,SAAEoB,GAAyC,EAC/D,OAAOP,EAAAA,cAAAA,MAAAA,CAAKC,UCHS,yCDGiBM,EAAe,C,qEEFhD,MAAMW,EAAgB,KAC3B,MAAM,KAAEC,IAASnC,EAAAA,EAAAA,IAAe,cAW1Be,EAA6B,oBAAXF,OAAyBA,OAAOC,SAASC,SAAST,MAAM,KAAK,GAAK,GAC1F,MAAO,CAAC6B,EAAKC,aAAcrB,EAAS,C,8JCRvB,SAASsB,EAAM,GAAyC,IAAzC,KAAEC,GAAqC,EACnE,MAAMC,EAAQD,EAAKE,kBAAkBC,MAAM/B,KAAIQ,IAAA,IAAC,KAAEwB,GAAM,SAAKA,CAAI,IAEjE,OACE1B,EAAAA,cAAC2B,EAAAA,EAAM,KACL3B,EAAAA,cAAC4B,EAAAA,EAAY,KACVL,EAAM7B,KAAKe,IAAI,aACdT,EAAAA,cAACI,EAAAA,GAAI,CAACC,IAAKI,EAAKN,GAAIG,IAAIG,SAAiB,QAAb,EAAJA,EAAMC,mBAAW,WAAb,EAAJC,EAAmBkB,OAAQ,IACjD7B,EAAAA,cAAC8B,EAAAA,EAAQ,CAACrB,KAAMA,IACX,KAKjB,CAEO,MAAMsB,EAAO,KAClB,OAAO,MAAEnB,GAASb,IAAYmB,EAAAA,EAAAA,KAC9B,OACElB,EAAAA,cAAAA,QAAAA,KACGY,EAAM,MAAIb,GAAsB,OAC3B,C","sources":["webpack://choose-life/./src/components/navigation/navigation.tsx","webpack://choose-life/./src/components/navigation/navigation.module.css","webpack://choose-life/./src/components/layout/layout.tsx","webpack://choose-life/./src/components/layout/layout.module.css","webpack://choose-life/./src/components/post_card/postCard.tsx","webpack://choose-life/./src/components/post_card/postCard.module.css","webpack://choose-life/./src/components/post_card_grid/postCardGrid.tsx","webpack://choose-life/./src/components/post_card_grid/postCardGrid.module.css","webpack://choose-life/./src/lib/hooks/useHeaderData.ts","webpack://choose-life/./src/pages/posts/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport * as st from './navigation.module.css';\n\nconst usenavigationQuery = (): [{ path: string; id: string }] => {\n  const {\n    allSitePage: { nodes: allPages },\n  } = useStaticQuery(\n    graphql`\n      query {\n        allSitePage {\n          nodes {\n            path\n            id\n          }\n        }\n      }\n    `,\n  );\n  return allPages;\n};\n\nconst navigation = () => {\n  const allPages = usenavigationQuery();\n  const filteredPages = allPages.filter(\n    ({ path }) => !path.includes('404') && path.split('/').length <= 3,\n  );\n\n  const format = (path: string) =>\n    path === '/'\n      ? 'home'\n      : path\n          .split('')\n          .filter((c) => c !== '/')\n          .map((c) => (c === '_' ? ' ' : c))\n          .join('');\n\n  const currentPath = typeof window !== 'undefined' ? window.location.pathname.split('/')[1] : '';\n\n  return (\n    <div className={st.link_list}>\n      {filteredPages.map(({ path, id }) => (\n        <Link key={id} to={path} className={currentPath !== format(path) ? '' : st.currentPath}>\n          {format(path)}\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default navigation;\n","// extracted by mini-css-extract-plugin\nexport var currentPath = \"navigation-module--currentPath--06ae2\";\nexport var link_list = \"navigation-module--link_list--4a79f\";","import * as React from 'react';\nimport Navigation from '../navigation/navigation';\nimport * as st from './layout.module.css';\nimport '../../global.css';\n\nconst Layout = ({ children }: { children: React.ReactNode }) => {\n  return (\n    <div className={st.container}>\n      <header>\n        <h1>CHOOSE LIFE</h1>\n        <Navigation />\n      </header>\n      <article>{children}</article>\n    </div>\n  );\n};\n\nexport default Layout;\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--4f29e\";","import * as React from 'react';\nimport * as st from './postCard.module.css';\n\ninterface postProps {\n  excerpt: string | null;\n  frontmatter: {\n    title: string | null;\n    birth: string | null;\n    modified: string | null;\n    slug: string | null;\n  } | null;\n}\n\nconst PostCard = ({ post }: { post: postProps }) => {\n  return (\n    <div className={st.container}>\n      <h2>{post.frontmatter?.title}</h2>\n      <p>\n        <span>작성 : </span>\n        {post.frontmatter?.birth}\n      </p>\n      <p>\n        <span>수정 : </span>\n        {post.frontmatter?.modified}\n      </p>\n      <article>\n        <p>{post.excerpt}</p>\n      </article>\n    </div>\n  );\n};\n\nexport default PostCard;\n","// extracted by mini-css-extract-plugin\nexport var container = \"postCard-module--container--2572d\";","import * as React from 'react';\nimport * as st from './postCardGrid.module.css';\n\nconst PostCardGrid = ({ children }: { children: React.ReactNode }) => {\n  return <div className={st.container}>{children}</div>;\n};\n\nexport default PostCardGrid;\n","// extracted by mini-css-extract-plugin\nexport var container = \"postCardGrid-module--container--a949b\";","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const useHeaderData = (): [{ title: string }, string] => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `,\n  );\n  const pathname = typeof window !== 'undefined' ? window.location.pathname.split('/')[2] : '';\n  return [site.siteMetadata, pathname];\n};\n","import * as React from 'react';\nimport { graphql, PageProps, Link } from 'gatsby';\nimport { useHeaderData } from '../../lib/hooks/useHeaderData';\nimport Layout from '../../components/layout/layout';\nimport PostCard from '../../components/post_card/postCard';\nimport PostCardGrid from '../../components/post_card_grid/postCardGrid';\n\nexport default function Posts({ data }: PageProps<Queries.PostsQuery>) {\n  const posts = data.allMarkdownRemark.edges.map(({ node }) => node);\n\n  return (\n    <Layout>\n      <PostCardGrid>\n        {posts.map((post) => (\n          <Link key={post.id} to={post?.frontmatter?.slug || ''}>\n            <PostCard post={post} />\n          </Link>\n        ))}\n      </PostCardGrid>\n    </Layout>\n  );\n}\n\nexport const Head = () => {\n  const [{ title }, pathname] = useHeaderData();\n  return (\n    <title>\n      {title} | {pathname ? pathname : 'home'}\n    </title>\n  );\n};\n\nexport const query = graphql`\n  query Posts {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/write/posts/\" } }\n      sort: { fields: [frontmatter___birth], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            birth\n            modified\n            slug\n          }\n          excerpt\n          id\n        }\n      }\n    }\n  }\n`;\n"],"names":["filteredPages","allSitePage","nodes","allPages","useStaticQuery","usenavigationQuery","filter","_ref","path","includes","split","length","format","c","map","join","currentPath","window","location","pathname","React","className","_ref2","id","Link","key","to","children","Navigation","post","frontmatter","_post$frontmatter","title","_post$frontmatter2","birth","_post$frontmatter3","modified","excerpt","useHeaderData","site","siteMetadata","Posts","data","posts","allMarkdownRemark","edges","node","Layout","PostCardGrid","slug","PostCard","Head"],"sourceRoot":""}